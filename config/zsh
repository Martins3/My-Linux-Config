eval "$(zoxide init zsh)"

export ATUIN_NOBIND="true"
eval "$(atuin init zsh)"

bindkey '^r' _atuin_search_widget
# eval "$(atuin init zsh --disable-up-arrow)"
# eval "$(mcfly init zsh)"
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5'
export PATH="$HOME/.npm-packages/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/go/bin:$PATH"

source /etc/os-release
if [[ $ID == "nixos" ]];then
  eval "$(direnv hook zsh)"

  function en_direnv() {
    echo "use nix" >> .envrc && direnv allow
  }
  export NIX_CONF_DIR=$HOME/.config/nixpkgs/nix
fi

# 参考 https://gist.github.com/iansu/1ad9fc5db90aafbf14ce58e99d5940ef
# prompt 中通过不同的 emoji 来标识架构
if [[ -f ~/core/id ]]; then
  export SHELL_ARCH=$(cat ~/core/id)
else
  if grep "GenuineIntel" /proc/cpuinfo >/dev/null; then
    export SHELL_ARCH="🐙"
  elif grep "AuthenticAMD" /proc/cpuinfo >/dev/null; then
    export SHELL_ARCH="🐉"
  else
    export SHELL_ARCH="ARM"
  fi
fi
eval "$(starship init zsh)"


function rpm_extract() {
  rpm2cpio $1 | cpio -idmv
}

function tpx() {
  PROXY_SERVER_IP="http://127.0.0.1"
  PROXY_SERVER_PORT=8889
  while getopts "ga:p:hu" opt; do
    case $opt in
      g)
        PROXY_SERVER_IP="http://10.0.2.2"
        PROXY_SERVER_PORT=8889
        ;;
      a)
        PROXY_SERVER_IP=${OPTARG}
        ;;
      p)
        PROXY_SERVER_PORT=${OPTARG}
        ;;
      u)
        export https_proxy=
        export http_proxy=
        export HTTPS_PROXY=
        export HTTP_PROXY=
        export ftp_proxy=
        export FTP_PROXY=

        return
        ;;
      h)
        echo "-g : use this in QEMU"
        echo "-a : ip address"
        echo "-p : ip port"
        ;;
      *)
        exit 1
        ;;
    esac # --- end of case ---
  done

  set -x
  export https_proxy="$PROXY_SERVER_IP:$PROXY_SERVER_PORT"
  export http_proxy="$PROXY_SERVER_IP:$PROXY_SERVER_PORT"
  export HTTPS_PROXY="$PROXY_SERVER_IP:$PROXY_SERVER_PORT"
  export HTTP_PROXY="$PROXY_SERVER_IP:$PROXY_SERVER_PORT"
  export ftp_proxy="$PROXY_SERVER_IP:$PROXY_SERVER_PORT"
  export FTP_PROXY="$PROXY_SERVER_IP:$PROXY_SERVER_PORT"
}

# https://www.reddit.com/r/zellij/comments/10skez0/does_zellij_support_changing_tabs_name_according/
# rename zellij tab automatically
zellij_tab_name_update() {
    if [[ -n $ZELLIJ ]]; then
        local current_dir=$PWD
        if [[ $current_dir == $HOME ]]; then
            current_dir="~"
        else
            current_dir=${current_dir##*/}
        fi
        command nohup zellij action rename-tab $current_dir >/dev/null 2>&1
    fi
}

zellij_tab_name_update
chpwd_functions+=(zellij_tab_name_update)

function zj() {
	if [[ -n $ZELLIJ ]]; then
		if [[ $# -ne 1 ]]; then
			echo "usage: zj name"
			exit 1
		fi
		dirname="/tmp/martins3/$1"
		mkdir -p "$dirname"
		cd "$dirname"
		nohup zellij action rename-tab "$1" >/dev/null 2>&1
	fi
}

alias px="proxychains4 -f /home/martins3/.dotfiles/config/proxychain.conf"


# 打开工作区间并且构建
alias b="/home/martins3/.dotfiles/config/sh/tmux.sh && exit"
alias c="clear"
alias git_ignore="echo \$(git status --porcelain | grep '^??' | cut -c4-) > .gitignore"
alias gs="tig status"
alias gg="gitui --watcher"
alias win="/home/martins3/core/vn/docs/qemu/sh/windows.sh"
alias kernel_version="git describe --contains"
# https://unix.stackexchange.com/questions/45120/given-a-git-commit-hash-how-to-find-out-which-kernel-release-contains-it
alias knews="/home/martins3/.dotfiles/scripts/systemd/news.sh kernel"
alias ldc="lazydocker"
alias ls="exa --icons"
alias m="KBUILD_BUILD_TIMESTAMP='' make LLVM=1 CC='ccache clang' -j$(getconf _NPROCESSORS_ONLN)"
alias im="ibus engine rime"
alias mc="make clean"
alias q="exit"
alias v="mkdir -p /tmp/martins3/nvim/ && nvim --listen /tmp/martins3/nvim/$(uuidgen)"
alias vs="/home/martins3/.dotfiles/config/sh/close-nvim.sh"
alias vc="rm -r ~/.local/share/nvim/sessions"
alias ag=rg
alias he="nvim +10000  /home/martins3/.dotfiles/sheet.md"
alias kvm_stat="sudo /home/martins3/data/linux/tools/kvm/kvm_stat/kvm_stat"
alias p="python -m venv .venv && source .venv/bin/activate"
alias i="ipython"
alias f="xclip -o >> /home/martins3/core/vn/fun.md && echo '' >> /home/martins3/core/vn/fun.md && cat /home/martins3/core/vn/fun.md"
alias cloc="tokei . -f --sort lines"
alias static="nix-shell -p gcc glibc.static --command zsh"
alias crash="/home/martins3/core/crash/crash"
alias wez=/home/martins3/.dotfiles/config/sh/wez-opacity.sh
alias hz="viddy 'cat /proc/cpuinfo | grep MHz'"
alias ins="/home/martins3/.dotfiles/scripts/nix/env/install.sh"
function config_repo(){
  git config user.name martins3
  git config user.email hubachelar@gmail.com
}
function check(){
	cd ~/core/linux-upstream/
	tig --author="$*"
}
alias weather="curl wttr.in/beijin"
alias drop_cache="echo 3 | sudo tee /proc/sys/vm/drop_caches"
alias wifi="nmcli dev wifi show-password"

if env | grep container &>/dev/null ; then
  function u() {
  	rsync -avzh --delete --filter="dir-merge,- .gitignore" martins3@10.0.2.2:/home/martins3/.dotfiles ~
  }
else
  function u() {
  	rsync -avzh --delete --filter="dir-merge,- .gitignore" martins3@10.0.0.2:/home/martins3/core/vn ~/core
  	rsync -avzh --delete --filter="dir-merge,- .gitignore" martins3@10.0.0.2:/home/martins3/.dotfiles ~
  }
fi
export NIXPKGS_ALLOW_INSECURE=1
export EDITOR=nvim
export PATH=$PATH:/usr/share/bcc/tools
