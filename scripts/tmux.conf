set -g default-terminal "screen-256color" # colors!
set-option -sa terminal-overrides ",xterm*:Tc"

set -sg escape-time 0

set -g display-panes-time 4000
set -g pane-base-index 1
set -g base-index 1
setw -g pane-base-index 1

# 使用 Alt + num 来选择不同的 window
bind-key -n M-0 select-window -t 0
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# 使用 Alt+hljk 来在不同的 pane 中移动
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

setw -g window-status-current-style fg=black,bg=yellow

set-option -g status-position top

set -g mouse on

set-window-option -g mode-keys vi

# 创建 window 和 pane 的方法
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# 将 window 的名称自动修改为路径名称，便于区分
set-option -g status-interval 0
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# 使用 Ctrl h 作为 prefix
set -g prefix C-h

# 在 vim 中可以设置当焦点改变的时候自动保存, 如果 vim 运行在 tmux 中，
# 打开 focus-events 之后，当切换到不同的 window 之后，vim 可以检测到 focus 
# 发生了改变
set-option -g focus-events on
